openapi: 3.0.0
info:
  title: Swagger Core Nuevo SPA - OpenAPI 3.0
  description: |-
    This file describe the core operations for the Nuevo SPA company that are use in
    a application
  contact:
    email: andresduran0205@gmail.com
  version: 0.0.1
servers:
  - url: http://localhost:8080/api
tags:
  - name: access
    description: Operations about authentication
  - name: user
    description: Operations about user
  - name: task
    description: Operations about task
paths:
  /auth:
    post:
      description: Generate JWT to access for use all apis for Nuevo SPA.
      tags:
        - access
      summary: Validate credentials and generate JWT
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsRequest'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /user:
    post:
      description: Register a new client for SPA
      tags:
        - user
      summary: Create a user in a system.
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    get:
      description: Search users for SPA with parameters
      tags:
        - user
      summary: Search users in a system with parameters
      operationId: getAllUsers
      parameters:
        - name: page
          in: query
          description: Number of page to return
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: limit
          in: query
          description: Maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /user/{id}:
    put:
      description: Modify fields for a existent client for SPA
      tags:
        - user
      summary: Update a user in a system.
      operationId: updateUser
      parameters:
        - name: id
          in: path
          description: Unique identifier of user
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      description: Delete a existent client for SPA
      tags:
        - user
      summary: Remove a user of the system.
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          description: Unique identifier of user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: boolean
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    get:
      description: Search users by id for SPA
      tags:
        - user
      summary: Search user by id
      operationId: getUserById
      parameters:
        - name: id
          in: path
          description: Unique identifier of user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /task:
    post:
      description: Register a new task for SPA
      tags:
        - task
      summary: Create a task in a system.
      operationId: createTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    get:
      description: Search tasks for SPA with parameters
      tags:
        - task
      summary: Search tasks in a system with parameters
      operationId: getAllTasks
      parameters:
        - name: page
          in: query
          description: Number of page to return
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: limit
          in: query
          description: Maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiResponse'
  /task/{id}:
    put:
      description: Modify fields for a existent task for SPA
      tags:
        - task
      summary: Update a task in a system.
      operationId: updateTask
      parameters:
        - name: id
          in: path
          description: Unique identifier of task
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      description: Delete a existent task for SPA
      tags:
        - task
      summary: Remove a task of the system.
      operationId: deleteTask
      parameters:
        - name: id
          in: path
          description: Unique identifier of task
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: boolean
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    get:
      description: Search task by id for SPA
      tags:
        - task
      summary: Search task by id
      operationId: getTaskById
      parameters:
        - name: id
          in: path
          description: Unique identifier of task
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /status/task:
    get:
      description: Search all status of task
      tags:
        - task
      summary: Search all status of tasks
      operationId: getAllStatusTasks
      parameters:
        - name: page
          in: query
          description: Number of page to return
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: limit
          in: query
          description: Maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatusResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiResponse'
components:
  schemas:
    CredentialsRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
          format: password
      required:
        - email
        - password
    CredentialsResponse:
      type: object
      properties:
        access_token:
          type: string
        expiration_time:
          type: integer
          format: int32
    UserRequest:
      type: object
      properties:
        credentials:
          $ref: '#/components/schemas/CredentialsRequest'
        firstName:
          type: string
        lastName:
          type: string
        phone:
          type: string
        enable:
          type: boolean
          default: true
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        enable:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    TaskRequest:
      type: object
      properties:
        user_id:
          type: integer
          format: int64
        status:
          $ref: '#/components/schemas/StatusResponse'
        title:
          type: string
        description:
          type: string
    TaskResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        status:
          $ref: '#/components/schemas/StatusResponse'
        user:
          $ref: '#/components/schemas/UserResponse'
        title:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    StatusResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        enable:
          type: boolean
    ApiResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: [ ]